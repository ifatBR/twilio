{"version":3,"sources":["assets/img/logo.png","services/utilService.js","cmps/TodoPreview/TodoPreview.jsx","cmps/TodoList/TodoList.jsx","cmps/TodoFilter/TodoFilter.jsx","hooks/useForm.js","services/httpService.js","services/todoService.js","store/actions/todoActions.js","pages/HomePage/HomePage.jsx","pages/TodoDetail/TodoDetail.jsx","pages/TodoEdit/TodoEdit.jsx","hooks/useFormEdit.js","cmps/AppHeader/AppHeader.jsx","App.js","store/reducers/todoReducer.js","store/index.js","serviceWorker.js","index.js"],"names":["utilService","getRandomInt","min","max","Math","ceil","floor","random","makeId","length","txt","possible","i","charAt","formattedDate","timeStamp","Date","toLocaleDateString","TodoPreview","todo","onToggleCheck","onRemoveTodo","className","doneAt","onClick","to","_id","title","importance","createdAt","TodoList","todos","map","TodoFilter","props","initialState","cb","useState","fields","setFields","useEffect","target","field","name","value","type","useForm","date","text","onChangeFilter","filterBy","handleChange","onSubmit","ev","preventDefault","htmlFor","id","onChange","stopPropagation","newFilter","resetDateFilter","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","todoService","save","query","remove","getById","getEmptyTodo","TODO_URL","getTime","queryStr","todoId","updatedTodo","addedTodo","description","getTodoById","dispatch","saveTodo","isAdd","removeTodo","HomePage","setFilterBy","useSelector","state","useDispatch","loadTodos","useCallback","now","toggleCheck","TodoDetail","currTodo","useParams","history","useHistory","onGoBack","push","TodoEdit","onSaveTodo","parseInt","todoToSave","todoToEdit","useFormEdit","colSpan","required","AppHeader","src","require","default","alt","App","component","path","exact","INITIAL_STATE","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","filter","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35e5b875.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e978e1ee.png\";","export const utilService = {\r\n    getRandomInt,\r\n    makeId,\r\n    formattedDate,\r\n};\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction formattedDate(timeStamp) {\r\n    return new Date(timeStamp).toLocaleDateString('he-IL');\r\n}\r\n","import './TodoPreview.scss';\nimport { Link } from 'react-router-dom';\nimport { utilService } from '../../services/utilService';\nexport function TodoPreview({ todo, onToggleCheck, onRemoveTodo }) {\n    return (\n        <li className=\"list-row-layout todo-preview\">\n            <button className={todo.doneAt? 'status done' : 'status undone'} onClick={() => onToggleCheck(todo)}></button>\n            <Link to={'/detail/' + todo._id} className=\"list-row-info-layout preview-info\">\n                <p className={todo.doneAt? 'strike' : ''}>{todo.title}</p>\n                <p>{todo.importance}</p>\n                <p>{utilService.formattedDate(todo.createdAt)}</p>\n            </Link>\n            <button className=\"btn warning\" onClick={() => onRemoveTodo(todo._id)}>\n                X\n            </button>\n        </li>\n    );\n}\n","import './TodoList.scss';\nimport { TodoPreview } from '../TodoPreview';\nimport { Link } from 'react-router-dom';\n\nexport function TodoList({ todos, onToggleCheck, onRemoveTodo }) {\n    return (\n        <div>\n            <ul className=\"clean-list todo-list\">\n                <li className=\"list-row-layout headline\">\n                    <div className=\"list-row-info-layout\">\n                        <h3 className=\"title\">Title</h3>\n                        <h3 className=\"importance\">Importance</h3>\n                        <h3 className=\"date\">Date</h3>\n                    </div>\n                </li>\n                {todos.map((todo) => (\n                    <TodoPreview todo={todo} onToggleCheck={onToggleCheck} onRemoveTodo={onRemoveTodo} key={todo._id} />\n                ))}\n                <li className=\"list-row-layout\"><Link to=\"/edit\"className=\"btn action\">+</Link></li>\n            </ul>\n        </div>\n    );\n}\n","import { useState } from 'react';\nimport './TodoFilter.scss';\nimport { useForm } from '../../hooks/useForm';\nexport function TodoFilter(props) {\n\n    const resetDateFilter = (ev) => {\n        ev.stopPropagation()        \n        handleChange({target:{name: 'date', type:'text', value:''}})\n        const newFilter = {...filterBy,date:''}\n        props.onChangeFilter(newFilter)\n    };\n\n    const [filterBy, handleChange] = useForm({ date: '', text: '' }, props.onChangeFilter);\n    const { date, text } = filterBy;\n\n    return (\n        <form className=\"todo-filter\" onSubmit={(ev) => ev.preventDefault()}>\n            <label htmlFor=\"date\">Filter by date:</label>\n            <input\n                type=\"date\"\n                name=\"date\"\n                id=\"date\"\n                value={date}\n                onChange={handleChange}\n                min=\"2021-01-01\"\n                max=\"2050-12-31\"\n            />\n            <button type=\"button\" className=\"btn warning\" onClick={(ev) => resetDateFilter(ev)}>Reset</button>\n            <label htmlFor=\"text\">Search:</label>\n            <input type=\"text\" name=\"text\" id=\"text\" value={text} onChange={handleChange} />\n        </form>\n    );\n}\n// export const TodoFilter = React.memo(_TodoFilter)\n","import { useEffect, useState } from 'react';\r\n\r\nexport function useForm(initialState, cb = function () {}) {\r\n    const [fields, setFields] = useState(initialState);\r\n\r\n    useEffect(() => {\r\n        cb(fields);\r\n    }, [fields]);\r\n\r\n    return [\r\n        fields,\r\n        function ({ target }) {\r\n            const field = target.name;\r\n            const value = target.type === 'number' ? +target.value : target.value;\r\n            setFields({ ...fields, [field]: value });\r\n        },\r\n    ];\r\n}\r\n","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n     \r\n        throw err\r\n    }\r\n}","import { httpService } from './httpService';\r\n\r\nexport const todoService = {\r\n    save,\r\n    query,\r\n    remove,\r\n    getById,\r\n    getEmptyTodo,\r\n};\r\n\r\nconst TODO_URL = 'todo';\r\n\r\nasync function query(filterBy) {\r\n    const date = filterBy?.date ? new Date(filterBy.date + ' 00:00:00').getTime() : '';\r\n    try {\r\n        var queryStr = !filterBy ? '' : `?date=${date}&text=${filterBy.text}`;\r\n        const todos = httpService.get(TODO_URL + queryStr);\r\n        return todos;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nasync function getById(todoId) {\r\n    try {\r\n        const todo = await httpService.get(`${TODO_URL}/${todoId}`);\r\n        return todo;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nasync function remove(todoId) {\r\n    try {\r\n        return httpService.delete(`${TODO_URL}/${todoId}`);\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nasync function save(todo) {\r\n    try {\r\n        if (todo._id) {\r\n            const updatedTodo = await httpService.put(`${TODO_URL}/${todo._id}`, todo);\r\n            return updatedTodo;\r\n        }\r\n        const addedTodo = await httpService.post(TODO_URL, todo);\r\n        return addedTodo;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nasync function getEmptyTodo() {\r\n    return {\r\n        title: '',\r\n        description: '',\r\n        importance: 1,\r\n        doneAt: null,\r\n        createdAt: null,\r\n    };\r\n}\r\n","import { todoService } from '../../services/todoService';\r\n\r\n// Thunk - Action Dispatcher\r\nexport function loadTodos(filterBy) {\r\n    return async (dispatch) => {\r\n        const todos = await todoService.query(filterBy);\r\n        dispatch({ type: 'SET_TODOS', todos });\r\n    };\r\n}\r\n\r\nexport function getTodoById(todoId) {\r\n    return async (dispatch) => {\r\n        const todo = await todoService.getById(todoId);\r\n        dispatch({ type: 'SET_TODO', todo });\r\n    };\r\n}\r\nexport function saveTodo(todo) {\r\n    return async (dispatch) => {\r\n        const isAdd = !todo._id;\r\n        const updatedTodo = await todoService.save(todo);\r\n\r\n        if (isAdd) dispatch({ type: 'ADD_TODO', todo: updatedTodo });\r\n        else dispatch({ type: 'UPDATE_TODO', updatedTodo });\r\n    };\r\n}\r\n\r\nexport function removeTodo(todoId) {\r\n    return async (dispatch) => {\r\n            await todoService.remove(todoId);\r\n            dispatch({ type: 'REMOVE_TODO', todoId });\r\n    };\r\n}\r\n\r\nexport function toggleCheck(todo) {\r\n    let doneAt = null\r\n    if(!todo.doneAt) doneAt = Date.now();\r\n    todo = {...todo, doneAt}\r\n    return async (dispatch) => {\r\n        const updatedTodo = await todoService.save(todo);\r\n        dispatch({ type: 'UPDATE_TODO', updatedTodo });\r\n    };\r\n}\r\n\r\n\r\nexport function getEmptyTodo() {\r\n    return async (dispatch) => {\r\n        const todo = await todoService.getEmptyTodo();\r\n        dispatch({ type: 'SET_TODO', todo});\r\n    };\r\n}\r\n","import './HomePage.scss';\nimport { TodoList } from '../../cmps/TodoList';\nimport { TodoFilter } from '../../cmps/TodoFilter';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadTodos, toggleCheck, removeTodo } from '../../store/actions/todoActions';\n\nexport function HomePage() {\n    const [filterBy, setFilterBy] = useState(null);\n\n    const todos = useSelector((state) => state.todos);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(loadTodos(filterBy));\n    }, [filterBy]);\n\n    const onChangeFilter = useCallback((filterBy) => {\n        setFilterBy(filterBy);\n    }, []);\n\n    const onToggleCheck = useCallback((todo) => {\n        dispatch(toggleCheck(todo));\n    });\n\n    const onRemoveTodo = useCallback((todoId) => {\n        dispatch(removeTodo(todoId));\n    });\n\n    return (\n        <div className=\"home-page\">\n            <h1>My todos</h1>\n            <TodoFilter  onChangeFilter={onChangeFilter} />\n            {todos && <TodoList todos={todos} onToggleCheck={onToggleCheck} onRemoveTodo={onRemoveTodo}/>}\n        </div>\n    );\n}\n","import './TodoDetail.scss';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodoById, getEmptyTodo, removeTodo } from '../../store/actions/todoActions';\nimport { useParams } from 'react-router-dom';\nimport { utilService } from '../../services/utilService';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\n\nexport function TodoDetail() {\n    const currTodo = useSelector((state) => state.todo);\n    const dispatch = useDispatch();\n    const params = useParams();\n    const history = useHistory();\n    const id = params.id;\n\n    useEffect(() => {\n        if (!id) {\n            dispatch(getEmptyTodo());\n        } else dispatch(getTodoById(id));\n    }, [params]);\n\n    const onGoBack = () => {\n        history.push('/');\n    };\n\n    const onRemoveTodo = useCallback((todoId) => {\n        dispatch(removeTodo(todoId));\n        onGoBack();\n    });\n\n    return (\n        currTodo && (\n            <section className=\"flex column align-center todo-detail\">\n                <button className=\"btn warning back\" onClick={onGoBack}></button>\n                <div className=\"todo-layout\">\n                    <h2>{currTodo.title}</h2>\n                    <h3>Description:</h3>\n                    <p>{currTodo.description}</p>\n                    <h3>Created at:</h3>\n                    <p>{utilService.formattedDate(currTodo.createdAt)}</p>\n                    <h3>Importance:</h3>\n                    <p>{currTodo.importance}</p>\n                    <h3>Status:</h3>\n                    <p>{currTodo.doneAt ? 'Done' : 'Undone'}</p>\n                    <div className=\"flex space-between\">\n                        <Link to={'/edit/' + currTodo._id} className=\"btn action edit\">\n                            Edit\n                        </Link>\n                        <button className=\"btn warning\" onClick={() => onRemoveTodo(currTodo._id)}>\n                            Delete\n                        </button>\n                    </div>\n                </div>\n            </section>\n        )\n    );\n}\n","import './TodoEdit.scss';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEmptyTodo, getTodoById, saveTodo } from '../../store/actions/todoActions';\nimport { useFormEdit } from '../../hooks/useFormEdit';\nimport { useParams, useHistory } from 'react-router-dom';\n\nexport function TodoEdit() {\n    const history = useHistory();\n    const currTodo = useSelector((state) => state.todo);\n    const dispatch = useDispatch();\n    const params = useParams();\n    const id = params.id;\n\n    const onGoBack = () => {\n        if (id) history.push('/detail/' + currTodo._id);\n        else history.push('/');\n    };\n\n    useEffect(() => {\n        if (!id) dispatch(getEmptyTodo())\n        else dispatch(getTodoById(id));\n    }, []);\n\n    \n    const onSaveTodo = async (ev) => {\n        const createdAt = parseInt(Date.now());\n        ev.preventDefault();\n        const todoToSave = {...todoToEdit, createdAt}\n        try {\n            await dispatch(saveTodo(todoToSave));\n            onGoBack();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const emptyTodo = {\n            title: '',\n            description: '',\n            importance: 1,\n            doneAt: '',\n            createdAt: ''\n    };\n\n    let [todoToEdit, handleChange] = useFormEdit(currTodo || emptyTodo);\n    const { title, description, importance } = todoToEdit;\n\n    return (\n        currTodo && (\n            <section className=\"todo-edit\" colSpan=\"6\">\n                <button className=\"btn warning back\" onClick={onGoBack}></button>\n                <form className=\"todo-layout todo-edit-form\" onSubmit={onSaveTodo}>\n                    <label>Title</label>\n                    <input name=\"title\" type=\"text\" onChange={handleChange} value={title} required />\n                    <label>Description</label>\n                    <textarea name=\"description\" type=\"text\" onChange={handleChange} value={description}  required/>\n                    <label>Importance</label>\n                    <input name=\"importance\" type=\"number\" onChange={handleChange} value={importance} min={1} max={3} />\n                    <button className=\"btn action\" type=\"submit\">\n                        Save\n                    </button>\n                </form>\n            </section>\n        )\n    );\n}\n","import { useEffect, useState } from 'react';\r\n\r\nexport function useFormEdit(initialState, cb = function () {}) {\r\n    const [fields, setFields] = useState(initialState);\r\n\r\n    useEffect(() => {\r\n        setFields(initialState);\r\n    }, [initialState]);\r\n\r\n    useEffect(() => {\r\n        cb(fields);\r\n    }, [fields]);\r\n\r\n    return [\r\n        fields,\r\n        function ({ target }) {\r\n            const field = target.name;\r\n            const value = target.type === 'number' ? +target.value : target.value;\r\n            setFields({ ...fields, [field]: value });\r\n        },\r\n    ];\r\n}\r\n","// import { NavLink, withRouter } from 'react-router-dom';\nimport './AppHeader.scss';\n// const _AppHeader = (props) => {\nexport function AppHeader(){\n    return (\n        <header className=\"flex justify-start align-center app-header\">\n            <img src={require(\"../../assets/img/logo.png\").default} alt=\"logo\" className=\"logo\"/>\n            <h2>\n                DO\n            </h2>\n            <div>\n                {/* <NavLink exact to=\"/\" className=\"nav-link home\" activeClassName=\"active-nav\" title=\"Home\">\n                </NavLink>\n                <NavLink to=\"/contact\" className=\"nav-link contact\" activeClassName=\"active-nav\" title=\"Contacts\">\n                </NavLink>\n                <NavLink to=\"/statistic\" className=\"nav-link statistic\" activeClassName=\"active-nav\" title=\"Statistics\">\n                </NavLink> */}\n            </div>\n        </header>\n    );\n};\n\n// export const AppHeader = withRouter(_AppHeader);\n","import React from 'react';\nimport { HomePage } from './pages/HomePage';\nimport {TodoDetail} from './pages/TodoDetail';\nimport {TodoEdit} from './pages/TodoEdit'\nimport { AppHeader } from './cmps/AppHeader';\nimport './scss/main.scss';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <AppHeader />\n                <Route component={TodoEdit} path=\"/edit/:id?\"></Route>\n                <Route component={TodoDetail} path=\"/detail/:id\"></Route>\n                <Route component={HomePage} path=\"/\" exact></Route>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const INITIAL_STATE = {\r\n    todos: [],\r\n    todo:null\r\n};\r\n\r\nexport function todoReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_TODOS':\r\n            return {\r\n                ...state,\r\n                todos: action.todos,\r\n            };\r\n        case 'SET_TODO':\r\n            return {\r\n                ...state,\r\n                todo: action.todo,\r\n            };\r\n        case 'ADD_TODO':\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos, action.todo],\r\n            };\r\n        case 'REMOVE_TODO':\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter((todo) => todo._id !== action.todoId),\r\n            };\r\n        case 'UPDATE_TODO':\r\n            const { updatedTodo } = action;\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map((todo) => (todo._id === updatedTodo._id ? updatedTodo : todo)),\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { applyMiddleware,  compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { todoReducer } from './reducers/todoReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(todoReducer, composeEnhancers(applyMiddleware(thunk)))","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}